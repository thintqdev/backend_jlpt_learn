# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Vocabulary {
  id: Int!
  kanji: String
  hiragana: String
  definition: String!
  example: String
  translation: String
  is_learned: Boolean!
  categoryId: Int!
  category: Category!
}

type Category {
  id: Int!
  name: String!
  nameJp: String!
  slug: String!
  level: String!
  description: String
  words: [Vocabulary!]!
}

type CategoryListResult {
  items: [Category!]!
  count: Int!
}

type GrammarExample {
  id: Int!
  sentence: String!
  translation: String!
  usageId: Int!
}

type GrammarUsage {
  id: Int!
  structure: String!
  meaning: String!
  note: String
  grammarId: Int!
  examples: [GrammarExample!]!
}

type Grammar {
  id: Int!
  title: String!
  level: String!
  definition: String!
  description: String
  usages: [GrammarUsage!]!
}

type Question {
  id: Int!
  question: String!
  options: [String!]!
  correctAnswer: Int!
  level: String!
  explanation: String
}

type QuestionPagination {
  data: [Question!]!
  page: Int!
  pageSize: Int!
  total: Int!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
}

type Conversation {
  id: Int!
  title: String!
  level: String!
  category: String!
  duration: String
  conversation: [Sentence!]!
}

type Sentence {
  speaker: String!
  text: String!
}

type Query {
  categories: CategoryListResult!
  category(id: Int!): Category!
  vocabularies: [Vocabulary!]!
  vocabulariesByConditions(categoryIds: [Int!]): [Vocabulary!]!
  vocabulariesByCategory(categoryId: Int!): [Vocabulary!]!
  vocabulary(id: Int!): Vocabulary!
  grammars: [Grammar!]!
  grammar(id: Int!): Grammar
  grammarUsages: [GrammarUsage!]!
  grammarUsage(id: Int!): GrammarUsage
  grammarExamples: [GrammarExample!]!
  grammarExample(id: Int!): GrammarExample
  questions(page: Int, pageSize: Int): QuestionPagination!
  question(id: Int!): Question!
  getRandomQuestion(level: EnumLevel!, count: Int!): [Question!]!
  conversations: [Conversation!]!
  conversation(id: Int!): Conversation!
}

enum EnumLevel {
  N5
  N4
  N3
  N2
  N1
}

type Mutation {
  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createVocabulary(input: CreateVocabularyInput!): Vocabulary!
  removeVocabulary(id: Int!): Vocabulary!
  importVocabularyCsv(file: Upload!, categoryId: Int!): Boolean!
  updateVocabularyStatus(input: UpdateVocabularyStatusInput!): Vocabulary!
  createGrammar(input: CreateGrammarInput!): Grammar!
  updateGrammar(id: Int!, input: UpdateGrammarInput!): Grammar!
  removeGrammar(id: Int!): Grammar!
  importGrammarCsv(file: Upload!): Boolean!
  createGrammarUsage(input: CreateGrammarUsageInput!): GrammarUsage!
  updateGrammarUsage(id: Int!, input: UpdateGrammarUsageInput!): GrammarUsage!
  removeGrammarUsage(id: Int!): GrammarUsage!
  createGrammarExample(input: CreateGrammarExampleInput!): GrammarExample!
  updateGrammarExample(id: Int!, input: UpdateGrammarExampleInput!): GrammarExample!
  removeGrammarExample(id: Int!): GrammarExample!
  createQuestion(createQuestionInput: CreateQuestionInput!): Question!
  updateQuestion(updateQuestionInput: UpdateQuestionInput!): Question!
  removeQuestion(id: Int!): Question!
  importQuestionCsv(file: Upload!): Boolean!
  createConversation(createConversationInput: CreateConversationInput!): Conversation!
  updateConversation(updateConversationInput: UpdateConversationInput!): Conversation!
  removeConversation(id: Int!): Conversation!
  createConversationJson(input: CreateConversationJsonInput!): Boolean!
}

input CreateCategoryInput {
  name: String!
  nameJp: String!
  slug: String!
  level: String!
  description: String
}

input UpdateCategoryInput {
  name: String
  nameJp: String
  slug: String
  level: String
  description: String
  id: Int!
}

input CreateVocabularyInput {
  kanji: String
  definition: String!
  example: String
  translation: String
  categoryId: Int!
  hiragana: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateVocabularyStatusInput {
  id: Int!
  is_learned: Boolean!
}

input CreateGrammarInput {
  title: String!
  level: String!
  definition: String!
  description: String
}

input UpdateGrammarInput {
  title: String
  level: String
  definition: String
  description: String
  id: Int!
}

input CreateGrammarUsageInput {
  structure: String!
  meaning: String!
  note: String
  grammarId: Int!
}

input UpdateGrammarUsageInput {
  structure: String
  meaning: String
  note: String
  grammarId: Int
  id: Int!
}

input CreateGrammarExampleInput {
  sentence: String!
  translation: String!
  usageId: Int!
}

input UpdateGrammarExampleInput {
  sentence: String
  translation: String
  usageId: Int
  id: Int!
}

input CreateQuestionInput {
  question: String!
  options: [String!]!
  correctAnswer: Int!
  level: EnumLevel!
  explanation: String
}

input UpdateQuestionInput {
  question: String
  options: [String!]
  correctAnswer: Int
  level: EnumLevel
  explanation: String
  id: Int!
}

input CreateConversationInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateConversationInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateConversationJsonInput {
  data: String!
}