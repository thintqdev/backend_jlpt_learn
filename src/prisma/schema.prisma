// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
      
model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  nameJp    String   @unique
  slug      String   @unique
  level     String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vocabularies    Vocabulary[]
  @@map("categories")
}

model Vocabulary {
  id        Int      @id @default(autoincrement())
  kanji    String?
  hiragana String?
  definition String
  example   String?
  translation String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  is_learned Boolean @default(false)

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("vocabularies")
}
model Grammar {
  id          Int      @id @default(autoincrement())
  title       String
  level       String
  definition  String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  usages      GrammarUsage[]

  @@map("grammars")
}

model GrammarUsage {
  id         Int      @id @default(autoincrement())
  structure  String
  meaning    String
  note       String?
  grammarId  Int
  grammar    Grammar  @relation(fields: [grammarId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  examples   GrammarExample[]

  @@map("grammar_usages")
}

model GrammarExample {
  id          Int      @id @default(autoincrement())
  sentence    String
  translation String
  usageId     Int
  usage       GrammarUsage @relation(fields: [usageId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("grammar_examples")
}

enum EnumLevel {
  N5
  N4
  N3
  N2
  N1
}

model Question {
  id            Int       @id @default(autoincrement())
  question      String
  options       String[]
  correctAnswer Int
  level         EnumLevel
  explanation   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("questions")
}

model Conversation {
  id            Int          @id @default(autoincrement())
  level         EnumLevel
  category      String
  duration      String?
  conversation  Json

  @@map("conservations")
}

